// global vars
global bytes_flushed, flush_count, hits, misses, dbgets

function show_time() {
  t = gettimeofday_ns()
  secs = t / 1000000000
  micros = t % 1000000000
  printf("%d.%09d ", secs, micros)
}

function show_begin(name: string) {
  show_time()
  printf("begin syscall=%s\n", name)
}

probe nd_syscall.fdatasync {
  show_begin(name)
}

probe nd_syscall.fdatasync.return {
  show_time()
  printf("end syscallfdatasync\n")
}

probe nd_syscall.fsync {
  show_time()
  printf("begin syscall=fsync\n")
}

probe nd_syscall.fsync.return {
  show_time()
  printf("syscall_end=fsync\n")
}

probe nd_syscall.msync {
  show_time()
  printf("syscall_begin=msync\n")
}

probe nd_syscall.msync.return {
  show_time()
  printf("syscall_end=msync\n")
}

probe nd_syscall.sync {
  show_time()
  printf("syscall_begin=sync\n")
}

probe nd_syscall.sync.return {
  show_time()
  printf("syscall_end=sync\n")
}

probe nd_syscall.sync_file_range {
  show_time()
  printf("syscall_begin=sync_file_range\n")
}

probe nd_syscall.sync_file_range.return {
  show_time()
  printf("syscall_end=sync_file_range\n")
}

probe bitcoind = process("/home/evan/code/bitcoin/src/bitcoind") {
}

// record when cache flushes start
probe bitcoind.mark("cache__flush_start") {
  bytes_flushed += $arg1
  flush_count++
  show_time()
  printf("flush_start size=%d\n", $arg1)
}

// record when cache flushes end
probe bitcoind.mark("cache__flush_end") {
  show_time()
  printf("flush_end\n")
}

// record cache hits
probe bitcoind.mark("cache__hit") {
  hits++
}

// record cache misses
probe bitcoind.mark("cache__miss") {
  misses++
}

probe bitcoind.mark("finish__ibd") {
  show_time()
  printf("finish_ibd\n")
}

probe bitcoind.function("CCoinsViewDB::GetCoin") {
  dbgets++
}

// print cache hit/miss info
probe timer.sec(1) {
  if (hits || misses) {
    show_time()
    printf("hits=%d misses=%d dbgets=%d\n", hits, misses, dbgets)
  }
}

probe end {
  printf("total flushes: %d\n", flush_count)
  printf("total bytes flushed: %d\n", bytes_flushed)
  printf("hit rate: %d / %d\n", hits, misses)
}
